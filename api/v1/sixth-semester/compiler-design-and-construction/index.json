{"data":{"subjectCode":"CSC365","title":"Compiler Design and Construction","semester":"Sixth Semester","description":"This course is designed to develop acquaintance with fundamental concepts of compiler design. The course starts with the basic concepts and also includes different phases of compilers like lexical analysis, syntax analysis, syntax-directed translation, type checking etc. in detail.","resources":[{"title":"Syllabus","items":[{"title":"Compiler Design and Construction Syllabus","id":"18kZgeu0LPlVNfCdpOWhi3MmFeC4nxxLF"}]},{"title":"Notes","items":[{"title":"Compiler Design and Construction Note","id":"1J6QVdNFNMhp1T81hJot_vQpVHrvkV-9o"},{"title":"Compiler Design and Construction Handwritten Note by Roshan Bist","id":"1ampbr63cXEdYfU4YF1L7W9QPIY6CKvEn"}]},{"title":"Old Questions","items":[{"title":"Compiler Design and Construction Model Question","id":"12GQle1K0Z3mjU3Q9333dlzz3V56JpRF6"},{"title":"Compiler Design and Construction Old Question 2068 (I)","id":"13SiDnDzaO2383WNbKUcSER5Q-frPypBF"},{"title":"Compiler Design and Construction Old Question 2068 (II)","id":"13KDSre9weiI5rp7c7PddUtFgO2V3VXA8"},{"title":"Compiler Design and Construction Old Question 2069","id":"13DZ8k6Hgi6jW0pojGyF8yf7xo4D5W8gG"},{"title":"Compiler Design and Construction Old Question 2071 (I)","id":"1333IjgRAsQUoCKvCofOlKkF9Opd6W8Pd"},{"title":"Compiler Design and Construction Old Question 2071 (II)","id":"12yQpoSDbsosN6kamDm7A0wd9upaYxL8o"},{"title":"Compiler Design and Construction Old Question 2072","id":"12tcKTphutQ6ng1RI2KRr8sGcfl0JXugz"},{"title":"Compiler Design and Construction Old Question 2073","id":"12s5Q3rJLD0ByL90_7dBAok7wVc8URZCv"},{"title":"Compiler Design and Construction Old Question 2074","id":"12oFND5P-YhSauZh37Qyr0tFWK430PjwF"},{"title":"Compiler Design and Construction Old Question 2076","id":"13g0w0XGnR2sDQCVgVfa2mOFYI6NMhzpe"}]}]},"content":"<p>This course is designed to develop acquaintance with fundamental concepts of compiler design. The course starts with the basic concepts and also includes different phases of compilers like lexical analysis, syntax analysis, syntax-directed translation, type checking etc. in detail.</p><p><strong>Course Objectives:</strong></p><ul>  <li>To develop knowledge in compiler design</li>  <li>To develop lexical analyzers, parsers, and small compilers using different tools</li>  <li>To develop lexical analyzers, parsers, and small compilers by using general purpose programming languages.</li></ul>"}